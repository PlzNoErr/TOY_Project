<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- name space는 UserRepo의 fully qualified name으로 설정한다. -->
<mapper namespace="com.ssafy.ssafit.model.dao.UserDao">

	<resultMap id="UserMap" type="User">
		<result column="user_seq" property="userSeq"/>
		<result column="user_id" property="userId"/>
		<result column="password" property="password"/>
		<result column="email" property="email"/>
		<result column="nickname" property="nickName"/>
		<result column="rank" property="rank"/>
		<result column="create_time" property="createTime"/>
		<result column="follower_count" property="followerCount"/>
		<result column="following_count" property="followingCount"/>
	</resultMap>



	<insert id="insertUser" parameterType="User">
		INSERT INTO
			USER
			(user_id, password, email, nickname, create_time)
		VALUES
			(#{userId}, #{password}, #{email}, #{nickName}, now())
	</insert>

	<delete id = "deleteUser" parameterType="String">
		DELETE FROM USER
		WHERE user_id = #{userId}
	</delete>

	<update id="updateUser" parameterType="User">
		UPDATE USER
		SET
			password = #{password},
			email = #{email},
			nickname = #{nickName}
		WHERE user_id = #{userId}
	</update>

	<select id="selectUserById" parameterType="String" resultMap="UserMap">
		SELECT * 
		FROM USER
		WHERE user_id = #{userId}
	</select>

	<select id="seletUserByIdandPassword" parameterType="String" resultMap="UserMap">
		SELECT *
		FROM USER
		WHERE user_id = #{userId} AND password = #{password}
	</select>

	<select id="seletUserForReduplicationCheckById" parameterType="String" resultMap="UserMap">
		SELECT *
		FROM USER
		WHERE user_id = #{userId}
	</select>

	<select id="seletUserForReduplicationCheckByNickname" parameterType="String" resultMap="UserMap">
		SELECT *
		FROM USER
		WHERE nickname = #{nickName}
	</select>

	<insert id="insertFollow" parameterType="long">
		insert into FOLLOW
		(following_user_seq, follow_user_seq)
		values (#{followingSeq}, #{followedSeq})
	</insert>

	<delete id="deleteFollow" parameterType="long">
		delete from FOLLOW
		WHERE follow_user_seq = #{followedSeq} and following_user_seq = #{followingSeq}
	</delete>

	<update id="updateFollowedCount" parameterType="long">
		UPDATE USER
		SET follower_count = follower_count + #{change}
		WHERE user_seq = #{UserSeq}
	</update>

	<update id="updateFollowingCount" parameterType="long">
		UPDATE USER
		SET following_count = following_count + #{change}
		WHERE user_seq = #{UserSeq}
	</update>

	<select id="selectAllFollowersByUserSeq" parameterType="long" resultMap="UserMap">
		SELECT U.user_id as user_id, U.nickname as nickname, U.user_seq as user_seq
		FROM FOLLOW F INNER JOIN USER U
		ON F.follow_user_seq = U.user_seq
		WHERE F.following_user_seq = #{userSeq}
	</select>

</mapper>